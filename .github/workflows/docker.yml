on:
  workflow_dispatch:

  workflow_call:
    inputs:
      IMAGE_NAME:
        type: 'string'
        required: true
      VERSION:
        type: 'string'
        required: true
      CONTAINER_REGISTRY:
        type: 'string'
        required: true
    secrets:
      CONTAINER_REGISTRY_USERNAME:
        required: true
      CONTAINER_REGISTRY_TOKEN:
        required: true

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          pull: true
          context: ./backend
          platforms: linux/amd64,linux/arm64
          tags: ${{ inputs.IMAGE_NAME }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          target: production
          build-args: VERSION=${{ inputs.VERSION }}
